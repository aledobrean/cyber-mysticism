openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /user:
    get:
      tags:
        - user-controller
      summary: Get all users
      description: Get a list of all users
      operationId: findAll
      responses:
        "200":
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TarotUser'
    post:
      tags:
        - user-controller
      summary: Create an user
      description: Create an user
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TarotUser'
        required: true
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TarotUser'
        "400":
          description: Email validation error
        "409":
          description: User already exists
  /user/reading:
    get:
      tags:
        - user-controller
      summary: Get all readings for a user
      description: Retrieve all readings for an authenticated user using basic auth
      operationId: getReadingsForUser
      parameters:
        - name: Authorization
          in: header
          description: Basic Auth header
          required: false
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
        "403":
          description: Access forbidden
        "200":
          description: Retrieved readings successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reading'
  /three-cards-divination/reading:
    get:
      tags:
        - three-cards-divination-controller
      summary: Perform a reading for an user
      description: Perform a three cards divination reading for an authenticated user
        using basic auth
      operationId: performReadingForUser
      parameters:
        - name: Authorization
          in: header
          description: Basic Auth header
          required: false
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
        "403":
          description: Access forbidden
        "412":
          description: Reading preconditions failed
        "200":
          description: Reading performed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreeCardsDivinationReading'
  /cards:
    get:
      tags:
        - tarot-deck-controller
      summary: Get all cards
      description: Retrieve all cards
      operationId: getCards
      responses:
        "200":
          description: Retrieved cards successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TarotCard'
  /cards/major-arcana:
    get:
      tags:
        - tarot-deck-controller
      summary: Get all major arcana cards
      description: Retrieve all major arcana cards
      operationId: getMajorArcanaCards
      responses:
        "200":
          description: Retrieved major arcana cards successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TarotCard'
  /user/{username}:
    delete:
      tags:
        - user-controller
      summary: Delete an user
      description: Delete an user using basic auth
      operationId: deleteById
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Basic Auth header
          required: false
          schema:
            type: string
      responses:
        "401":
          description: Unauthorized
        "403":
          description: Access forbidden
        "204":
          description: User deleted successfully
components:
  schemas:
    TarotUser:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
    Reading:
      type: object
      properties:
        uniqueReadingCode:
          type: string
          writeOnly: true
        user:
          $ref: '#/components/schemas/TarotUser'
        date:
          type: string
          format: date-time
    TarotCard:
      type: object
      properties:
        name:
          type: string
        number:
          type: integer
          format: int32
        arcana:
          type: string
        img:
          type: string
        fortune_telling:
          type: array
          items:
            type: string
    ThreeCardsDivinationReading:
      type: object
      properties:
        uniqueReadingCode:
          type: string
          writeOnly: true
        user:
          $ref: '#/components/schemas/TarotUser'
        date:
          type: string
          format: date-time
        past:
          $ref: '#/components/schemas/TarotCard'
        present:
          $ref: '#/components/schemas/TarotCard'
        future:
          $ref: '#/components/schemas/TarotCard'
